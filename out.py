# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'portknocker.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, Qt
import pandas as pd
from PyQt5.QtWidgets import QTableWidgetItem, QAbstractScrollArea, QHeaderView

from PySide2.QtCore import SIGNAL, QObject

port = pd.read_csv('port.csv')


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(646, 358)
        self.gameLabel = QtWidgets.QLabel(Dialog)
        self.gameLabel.setGeometry(QtCore.QRect(30, -20, 81, 81))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(True)
        font.setWeight(75)
        self.gameLabel.setFont(font)
        self.gameLabel.setObjectName("gameLabel")
        self.tcpLabel = QtWidgets.QLabel(Dialog)
        self.tcpLabel.setGeometry(QtCore.QRect(140, -20, 91, 81))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.tcpLabel.setFont(font)
        self.tcpLabel.setObjectName("tcpLabel")
        self.udpLabel = QtWidgets.QLabel(Dialog)
        self.udpLabel.setGeometry(QtCore.QRect(250, -20, 91, 81))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.udpLabel.setFont(font)
        self.udpLabel.setObjectName("udpLabel")
        self.genButton = QtWidgets.QPushButton(Dialog)
        self.genButton.setGeometry(QtCore.QRect(530, 280, 101, 71))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setUnderline(False)
        font.setWeight(75)
        font.setStrikeOut(False)
        self.genButton.setFont(font)
        self.genButton.setObjectName("genButton")
        self.gameTable = QtWidgets.QTableWidget(Dialog)
        self.gameTable.setGeometry(QtCore.QRect(30, 40, 571, 111))
        self.gameTable.setAutoFillBackground(False)
        self.gameTable.setObjectName("gameTable")
        self.gameTable.setColumnCount(0)
        self.gameTable.setRowCount(0)
        self.outputText = QtWidgets.QPlainTextEdit(Dialog)
        self.outputText.setGeometry(QtCore.QRect(30, 240, 491, 111))
        self.outputText.setObjectName("outputText")
        self.label_4 = QtWidgets.QLabel(Dialog)
        self.label_4.setGeometry(QtCore.QRect(30, 210, 91, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.styleList = QtWidgets.QListWidget(Dialog)
        self.styleList.setGeometry(QtCore.QRect(530, 240, 101, 31))
        self.styleList.setContextMenuPolicy(QtCore.Qt.ActionsContextMenu)
        self.styleList.setItemAlignment(QtCore.Qt.AlignCenter)
        self.styleList.setObjectName("styleList")
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        item.setFont(font)
        self.styleList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        item.setFont(font)
        self.styleList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        item.setFont(font)
        self.styleList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        item.setFont(font)
        self.styleList.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        item.setFont(font)
        self.styleList.addItem(item)
        self.finderText = QtWidgets.QPlainTextEdit(Dialog)
        self.finderText.setGeometry(QtCore.QRect(30, 180, 491, 31))
        self.finderText.setObjectName("finderText")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(30, 150, 81, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.findButton = QtWidgets.QPushButton(Dialog)
        self.findButton.setGeometry(QtCore.QRect(530, 180, 101, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.findButton.setFont(font)
        self.findButton.setObjectName("findButton")
        self.desintaionText = QtWidgets.QPlainTextEdit(Dialog)
        self.desintaionText.setGeometry(QtCore.QRect(420, 10, 181, 21))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.desintaionText.sizePolicy().hasHeightForWidth())
        self.desintaionText.setSizePolicy(sizePolicy)
        self.desintaionText.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.desintaionText.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.desintaionText.setObjectName("desintaionText")
        self.destLabel = QtWidgets.QLabel(Dialog)
        self.destLabel.setGeometry(QtCore.QRect(360, 10, 61, 20))
        self.destLabel.setObjectName("DestLabel")
        self.destinationCheck = QtWidgets.QCheckBox(Dialog)
        self.destinationCheck.setGeometry(QtCore.QRect(610, 10, 70, 17))
        self.destinationCheck.setText("")
        self.destinationCheck.setObjectName("destinationCheck")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.gameLabel.setText(_translate("Dialog", "Game List"))
        self.tcpLabel.setText(_translate("Dialog", "TCP Ports"))
        self.udpLabel.setText(_translate("Dialog", "UDP Ports"))
        self.genButton.setText(_translate("Dialog", "Generate"))
        self.label_4.setText(_translate("Dialog", "Output"))
        self.styleList.setSortingEnabled(True)
        __sortingEnabled = self.styleList.isSortingEnabled()
        self.styleList.setSortingEnabled(False)
        item = self.styleList.item(0)
        item.setText(_translate("Dialog", "iptables"))
        item = self.styleList.item(1)
        item.setText(_translate("Dialog", "firewalld"))
        item = self.styleList.item(2)
        item.setText(_translate("Dialog", "nftables"))
        item = self.styleList.item(3)
        item.setText(_translate("Dialog", "ufw"))
        item = self.styleList.item(4)
        item.setText(_translate("Dialog", "shorewall"))
        self.styleList.setSortingEnabled(__sortingEnabled)
        self.label.setText(_translate("Dialog", "Finder"))
        self.findButton.setText(_translate("Dialog", "Find"))
        self.destLabel.setText(_translate("Dialog", "Destination:"))

        def loadTable():
            noRows = len(port.index)
            noCols = 3
            self.gameTable.setRowCount(noRows)
            self.gameTable.setColumnCount(noCols)
            for i in range(noCols):
                for k in range(noRows):
                    x = str(port.iloc[k, i])
                    self.gameTable.setItem(k, i, QTableWidgetItem(x))

        def readTable():
            findQuery = self.finderText.toPlainText()
            # items = self.gameTable.find(findQuery, Qt.Qt.MatchContains)
            columnOfInterest = 0  # or whatever
            valueOfInterest = findQuery
            for rowIndex in range(self.gameTable.rowCount()):
                twItem = self.gameTable.item(rowIndex, columnOfInterest)
                if twItem.text().lower() == valueOfInterest.lower():
                    self.gameTable.setRowHidden(rowIndex, False)
                    self.gameTable.setSizeAdjustPolicy(QAbstractScrollArea.AdjustToContents)
                    self.gameTable.horizontalHeader().setSectionResizeMode(QHeaderView.ResizeToContents)
                    genOutput(rowIndex)
                elif findQuery == '':
                    for ind in range(self.gameTable.rowCount()):
                        self.gameTable.setRowHidden(ind, False)
                else:
                    self.gameTable.setRowHidden(rowIndex, True)

        sendTCPd = []
        sendUDPd = []

        def genOutput(location):
            tcpRules = self.gameTable.item(location, 1)
            sendTCP = tcpRules.text().replace('-', ':').split(',')
            udpRules = self.gameTable.item(location, 2)
            sendUDP = udpRules.text().replace('-', ':').split(',')
            outRules(sendTCP, sendUDP)

        def outRules(sendTCP, sendUDP):
            destination = ''
            for i in range(len(sendUDP)):
                sendTCPd.append((sendUDP[i]))
                outPrintD(sendUDP[i], destination)
            for i in range(len(sendTCP)):
                outPrintU(sendTCP[i], destination)
                sendUDPd.append((sendUDP[i]))


        def outPrintU(text, destination):
            if self.destinationCheck.isChecked():
                destination = self.desintaionText.toPlainText()
                tcpPrint = "iptables -t nat -A PREROUTING -i eth0 -p tcp --dport " + text + " -j DNAT --to-destination " + destination
                self.outputText.appendPlainText(tcpPrint)
            else:
                tcpPrint = "iptables -t nat -A PREROUTING -i eth0 -p tcp --dport " + text + " -j DNAT --to-destination " + destination
                self.outputText.appendPlainText(tcpPrint)

        def outPrintD(text, destination):
            if self.destinationCheck.isChecked():
                destination = self.desintaionText.toPlainText()
                udpPrint = "iptables -t nat -A PREROUTING -i eth0 -p udp " + text + " -j DNAT --to-destination " + destination
                self.outputText.appendPlainText(udpPrint)
            else:
                udpPrint = "iptables -t nat -A PREROUTING -i eth0 -p udp " + text + " -j DNAT --to-destination " + destination
                self.outputText.appendPlainText(udpPrint)

        def styleChange(text):
            style = self.styleList.currentItem().text()
            destination = self.desintaionText.toPlainText()
            if style == 'iptables':
                tcpPrint = "iptables -t nat -A PREROUTING -i eth0 -p tcp --dport " + text + " -j DNAT --to-destination " + destination
                self.outputText.appendPlainText(tcpPrint)
            elif style == 'firewalld':
                tcpPrint = "firewall-cmd --zone=external --add-forward-port=port=" + text + ":proto=tcp:toaddr=" + destination
                self.outputText.appendPlainText(tcpPrint)
            elif style == "ufw":
                tcpPrint = "ufw allow " + text + "/tcp"
                self.outputText.appendPlainText(tcpPrint)

        def genButtonPress():
            print(sendUDPd)
            self.outputText.clear()
            for i in range(len(sendUDPd)):
                styleChange(sendUDPd[i])
            for i in range(len(sendTCPd)):
                styleChange(sendTCPd[i])



        self.findButton.clicked.connect(readTable)
        self.destinationCheck.isChecked()
        self.genButton.clicked.connect(genButtonPress)
        loadTable()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    Dialog.setFixedSize(Dialog.size())
    sys.exit(app.exec_())
